$(function () {
  "use strict";

  // ==============================================================
  // Theme options
  // ==============================================================
  // ==============================================================
  // sidebar-hover
  // ==============================================================

  $(".left-sidebar").hover(
    function () {
      $(".navbar-header").addClass("expand-logo");
    },
    function () {
      $(".navbar-header").removeClass("expand-logo");
    }
  );
  // this is for close icon when navigation open in mobile view
  $(".nav-toggler").on("click", function () {
    $("#main-wrapper").toggleClass("show-sidebar");
    $(".nav-toggler i").toggleClass("ti-menu");
  });
  $(".nav-lock").on("click", function () {
    $("body").toggleClass("lock-nav");
    $(".nav-lock i").toggleClass("mdi-toggle-switch-off");
    $("body, .page-wrapper").trigger("resize");
  });
  $(".search-box a, .search-box .app-search .srh-btn").on("click", function () {
    $(".app-search").toggle(200);
    $(".app-search input").focus();
  });

  // ==============================================================
  // Right sidebar options
  // ==============================================================
  $(function () {
    $(".service-panel-toggle").on("click", function () {
      $(".customizer").toggleClass("show-service-panel");
    });
    $(".page-wrapper").on("click", function () {
      $(".customizer").removeClass("show-service-panel");
    });
  });
  // ==============================================================
  // This is for the floating labels
  // ==============================================================
  $(".floating-labels .form-control")
    .on("focus blur", function (e) {
      $(this)
        .parents(".form-group")
        .toggleClass("focused", e.type === "focus" || this.value.length > 0);
    })
    .trigger("blur");

  // ==============================================================
  //tooltip
  // ==============================================================
  $(function () {
    $('[data-toggle="tooltip"]').tooltip();
  });
  // ==============================================================
  //Popover
  // ==============================================================
  $(function () {
    $('[data-toggle="popover"]').popover();
  });

  // ==============================================================
  // Perfact scrollbar
  // ==============================================================
  $(".message-center, .customizer-body, .scrollable").perfectScrollbar({
    wheelPropagation: !0,
  });

  /*var ps = new PerfectScrollbar('.message-body');
    var ps = new PerfectScrollbar('.notifications');
    var ps = new PerfectScrollbar('.scroll-sidebar');
    var ps = new PerfectScrollbar('.customizer-body');*/

  // ==============================================================
  // Resize all elements
  // ==============================================================
  $("body, .page-wrapper").trigger("resize");
  $(".page-wrapper").show();
  // ==============================================================
  // To do list
  // ==============================================================
  $(".list-task li label").click(function () {
    $(this).toggleClass("task-done");
  });

  //****************************
  /* This is for the mini-sidebar if width is less then 1170*/
  //****************************
  var setsidebartype = function () {
    var width = window.innerWidth > 0 ? window.innerWidth : this.screen.width;
    if (width < 1170) {
      $("#main-wrapper").attr("data-sidebartype", "mini-sidebar");
    } else {
      $("#main-wrapper").attr("data-sidebartype", "full");
    }
  };
  $(window).ready(setsidebartype);
  $(window).on("resize", setsidebartype);
  //****************************
  /* This is for sidebartoggler*/
  //****************************
  $(".sidebartoggler").on("click", function () {
    $("#main-wrapper").toggleClass("mini-sidebar");
    if ($("#main-wrapper").hasClass("mini-sidebar")) {
      $(".sidebartoggler").prop("checked", !0);
      $("#main-wrapper").attr("data-sidebartype", "mini-sidebar");
    } else {
      $(".sidebartoggler").prop("checked", !1);
      $("#main-wrapper").attr("data-sidebartype", "full");
    }
  });
});

//Right Side Bar
function toggleSidebar() {
  if (
    document.getElementById("btnIcon").className ==
    "fas fa-angle-left text-white"
  ) {
    document.getElementById("btnIcon").className =
      "fas fa-angle-right text-white";

    $(".sidebar").animate(
      {
        right: "-270px",
      },
      450,
      function () { }
    );
  } else {
    document.getElementById("btnIcon").className =
      "fas fa-angle-left text-white";
    $(".sidebar").animate(
      {
        right: "-600px",
      },
      450,
      function () { }
    );
  }
}

function toggleSidebarT() {
  if (
    document.getElementById("btnIcon").className ==
    "fas fa-angle-left text-white"
  ) {
    document.getElementById("btnIcon").className =
      "fas fa-angle-right text-white";

    $(".sidebar-t").animate(
      {
        right: "-210px",
      },
      450,
      function () { }
    );
  } else {
    document.getElementById("btnIcon").className =
      "fas fa-angle-left text-white";
    $(".sidebar-t").animate(
      {
        right: "-550px",
      },
      450,
      function () { }
    );
  }
}

$(document).ready(function () {
  var currentDate = new Date();
  var daysOfWeek = [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
  ];
  var day = daysOfWeek[currentDate.getDay()];
  var date =
    currentDate.getMonth() +
    1 +
    "/" +
    currentDate.getDate() +
    "/" +
    currentDate.getFullYear();

  $("#dayValueRightBar").text("Today is " + day);
  $("#dateValueRightBar").text(date);
  $("#dayValueMain").text("Today is " + day);
  $("#dateValueMain").text(date);
});

$(document).ready(function () {
  ///
  // Loading Image Here
  loadImage("#profilePicture");
  $(".preloader").fadeOut();
  //
  var changePassword = $(".changeAccountPassword");
  var changeProfile = $(".changeAccountProfile");
  var htmlModal = "";
  var modalView = $(".modalView");
  var oldPassword = "";
  var newPassword = "";
  var confirmPassword = "";

  var formData = new FormData();
  var imagecrop = "";

  $(changePassword).on("click", function (e) {
    e.preventDefault();
    htmlModal = `
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
  <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
  </symbol>
  <symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
    <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"/>
  </symbol>
  <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
  </symbol>
</svg>
    <div class="modal fade" id="changePassword" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
            aria-labelledby="changePasswordLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="changePasswordLabel">Change Password</h5>
                        <button type="button" class="btn-close clearModal" data-bs-dismiss="modal"
                            aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                      <form id="updatePasswordForm">
                        <label for="oldPass">Old Password</label>
                        <input class="form-control oldPass" type="password" placeholder="Old Password" aria-label="oldpass"
                            name="oldPass">
                        <label for="oldPass">New Password</label>
                        <input class="form-control newPass" type="password" placeholder="New Password" aria-label="newPassword"
                            name="newPass">
                        <label for="oldPass">Confirm Password</label>
                        <input class="form-control confirmPass" type="password" placeholder="Confirm Password"
                            aria-label="confirmPass">
                      </form>
                    </div>
                    <div id="mainAlertBox">
                  
                  </div>
 
                   
                  <div class="modal-footer">

  <button type="button" class="btn btn-warning text-white resetInput">Reset</button>
  <button type="button" class="btn btn-secondary text-white clearModal" data-bs-dismiss="modal">Close</button>
  <button type="button" class="btn btn-danger text-white saveAccPassword">Save Changes</button>
  <div class="loader btn btn-danger" style="display:none;">
    <span></span>
    <span></span>
    <span></span>
    Please Wait
  </div>
</div>

            </div>
        </div>
    `;
    modalView.append(htmlModal);
    $("#changePassword").modal("toggle");
  });

  $(document).on("click", ".clearModal", function () {
    modalView.empty();
  });

  $(document).on("click", ".resetInput", function () {
    $("#updatePasswordForm").trigger("reset");

  });

  $(document).on("click", ".resetImageInput", function () {
    $("#mainAlertBox").empty();
    formData = new FormData();
    $(".cr-boundary").hide();
    $(".cr-slider-wrap").hide();

    $("#mainImageFrame").removeClass("ready");
    $(".imageInput").val(""); // this will clear the input val.
    $("#mainImageFrame");
    imagecrop
      .croppie("bind", {
        url: "",
      })
      .then(function () {

      }).catch(function (error) {

      });
    $(".clearImage").attr("disabled", false);
    loadOldImage();

    $("#resetImage").removeClass("resetImageInput");
    $("#clearImage").removeClass("clearImage");
    $("#saveAccountProfile").removeClass("saveAccProfile");
  });

  var cCode = "";

  $(document).on("click", ".clearImage", function () {


    $("#mainAlertBox").empty();
    formData = new FormData();

    $(".cr-boundary").hide();
    $(".cr-slider-wrap").hide();

    $("#mainImageFrame").removeClass("ready");
    $(".imageInput").val(""); // this will clear the input val.
    $("#mainImageFrame");
    imagecrop
      .croppie("bind", {
        url: "",
      })
      .then(function () {
        // do something
      })
      .catch(function (error) {

      });

    $("#saveAccountProfile").addClass("saveAccProfile");
    $("#resetImage").addClass("resetImageInput");
    $(".resetImageInput").attr("disabled", false);
    $(".saveAccProfile").attr("disabled", false);
    loadAvatar();

  });
  varalertBox = "";
  var mainAlertBox = "";
  $(document).on("submit", "#updatePasswordForm", function (e) {
    e.preventDefault();

    var alertBox = $(".alertBox");

    $.ajax({
      type: "POST",
      url:
        "/change/account/password?oldPass=" +
        oldPassword +
        "&newPass=" +
        newPassword +
        "&confirmPass=" +
        confirmPassword,
      beforeSend: function () {
        $(".saveAccPassword").attr("disabled", true);
        mainAlertBox.empty();
        $(".loader").show();
        $(".saveAccPassword").hide();
      },
      success: function (result) {
        $(".saveAccPassword").attr("disabled", false);
        $("#updatePasswordForm").trigger("reset");

        $(".loader").hide();
        $(".saveAccPassword").show();
        alertBox = `
         <div class="alertBox alert alert-success d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:"><use xlink:href="#check-circle-fill"/></svg>
                <div id="resultMessage">
              ${result}
                </div>
              </div>
        `;
        mainAlertBox.append(alert);
        setTimeout(() => {
          $("#mainAlertBox").empty();
        }, 5000);
      },
      error: function (e) {
        $(".saveAccPassword").attr("disabled", false);
        $(".loader").hide();
        $(".saveAccPassword").show();
        alertBox = `
         <div class="alertBox alert alert-warning d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill"/></svg>
                <div id="resultMessage">
              ${e.responseText}
                </div>
              </div>
        `;
        mainAlertBox.append(alert);
      },
    });
  });

  $(document).on("click", ".saveAccPassword", function () {
    mainAlertBox = $("#mainAlertBox");
    $("#mainAlertBox").empty();
    oldPassword = $(".oldPass").val();
    newPassword = $(".newPass").val();
    confirmPassword = $(".confirmPass").val();
    if (!oldPassword.trim() || !newPassword.trim() || !confirmPassword.trim()) {
      alertBox = `
         <div class="alertBox alert alert-warning d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill"/></svg>
                <div id="resultMessage">
            Please fill all required inputs.
                </div>
              </div>
        `;
      mainAlertBox.append(alert);
    } else if (newPassword.length < 8) {
      alertBox = `
         <div class="alertBox alert alert-warning d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill"/></svg>
                <div id="resultMessage">
           New password must be at least 8 characters long
                </div>
              </div>
        `;
      mainAlertBox.append(alert);
    } else if (confirmPassword.length < 8) {
      alertBox = `
         <div class="alertBox alert alert-warning d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill"/></svg>
                <div id="resultMessage">
           Confirm password must be at least 8 characters long
                </div>
              </div>
        `;
      mainAlertBox.append(alert);
    } else if (
      !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})/.test(
        newPassword
      )
    ) {
      alertBox = `
         <div class="alertBox alert alert-warning d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill"/></svg>
                <div id="resultMessage">
           New password must contain at least 1 lowercase, 1 uppercase, 1 special character, and 1 number
                </div>
              </div>
        `;
      mainAlertBox.append(alert);
    } else if (newPassword !== confirmPassword) {
      alertBox = `
         <div class="alertBox alert alert-warning d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#exclamation-triangle-fill"/></svg>
                <div id="resultMessage">
           New password and confirm password do not match
                </div>
              </div>
        `;
      mainAlertBox.append(alert);
    } else {
      $("#updatePasswordForm").submit();
    }
  });

  // Change Profile

  $(changeProfile).on("click", function (e) {
    e.preventDefault();
    htmlModal = `
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
  <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
  </symbol>
  <symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
    <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"/>
  </symbol>
  <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
  </symbol>
</svg>
    <div class="modal fade" id="changeProfile" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
            aria-labelledby="changeProfileLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="changeProfileLabel">Change Profile Picture</h5>
                        <button type="button" class="btn-close clearModal" data-bs-dismiss="modal"
                            aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                      <form id="updateProfileForm">
                        <div style="display:none">
                        <label for="image">Profile Picture</label>
                        <input class="form-control imageInput" type="file" placeholder="Please Select Image" aria-label="image"
                            name="image" accept="image/jpeg, image/png" required>
                        </div>
                        <div id="avatarFrame"></div>
                      <div id="mainImageFrame"></div>
                      </form>
                    </div>
                    <div id="mainAlertBox">
                  
                    </div>
 
                   
                  <div class="modal-footer">
                  <button id="changeImage" type="button" class="btn btn-danger text-white triggerFileInput">Change</button>
                  <button id="resetImage" type="button" class="btn btn-warning text-white " disabled>Reset</button>
                  <button id="clearImage" type="button" class="btn btn-primary text-white ">Clear</button>
                  <button  type="button" class="btn btn-secondary text-white clearModal" data-bs-dismiss="modal">Cancel</button>
                  <button id="saveAccountProfile" type="button" class="btn btn-success text-white " disabled>Save Changes</button>
  <div class="loader btn btn-danger" style="display:none;">
    <span></span>
    <span></span>
    <span></span>
    Please Wait
  </div>
</div>

            </div>
        </div>
    `;
    modalView.append(htmlModal);


    if (!$("#mainImageFrame").data("croppie")) {
      imagecrop = $("#mainImageFrame").croppie({
        enableExif: true,
        viewport: {
          width: 250,
          height: 250,
          type: "circle",
        },
        boundary: {
          width: 300,
          height: 300,
        },
      });
    }
    $(".cr-boundary").hide();
    $(".cr-slider-wrap").hide();
    $("#changeProfile").modal("toggle");
    // Loading image
    loadOldImage();
  });
  $(document).on("click", ".triggerFileInput", function (e) {
    $(".imageInput").trigger("click");
  });
  $(document).on("change", ".imageInput", function (e) {
    $(".cr-boundary").show();
    $(".cr-slider-wrap").show();
    $(".bigAvatar").remove();



    var reader = new FileReader();
    reader.onload = function (e) {
      imagecrop
        .croppie("bind", {
          url: e.target.result,
        })
        .then(function () { }).catch(function (error) {

        });
    };
    reader.readAsDataURL(this.files[0]);

    $("#oldImage").remove();

    // adding class
    $("#resetImage").addClass("resetImageInput");
    $("#saveAccountProfile").addClass("saveAccProfile");
    $(".saveAccProfile").attr("disabled", false);
    $(".clearImage").attr("disabled", true);
    $(".resetImageInput").attr("disabled", false);
  });

  $(document).on("click", ".saveAccProfile", function (ev) {
    mainAlertBox = $("#mainAlertBox");
    imagecrop
      .croppie("result", {
        type: "canvas",
        size: "viewport",
        quality: 1,
      })
      .then(function (resp) {
        var croppedImage = resp.split(",")[1];
        var blob = new Blob([convertBase64UrlToBlob(croppedImage)], {
          type: "image/jpeg",
        });

        formData.append("image", blob);

        $.ajax({
          type: "POST",
          contentType: false,
          processData: false,
          url: "/change/account/profile-picture",
          data: formData,
          beforeSend: function () {
            $(".saveAccProfile").attr("disabled", true);
            mainAlertBox.empty();
            $(".saveAccProfile").hide();
            $(".loader").show();
          },
          success: function (response) {
            $(".clearImage").attr("disabled", false);
            $("#updateProfileForm").trigger("reset");
            formData = new FormData();
            $(".loader").hide();
            $(".saveAccProfile").show();

            alertBox = `
         <div class="alertBox alert alert-success d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:"><use xlink:href="#check-circle-fill"/></svg>
                <div id="resultMessage">
              ${response}
                </div>
              </div>
        `;
            mainAlertBox.append(alert);

            loadImage("#profilePicture");
            loadOldImage();
            $("#resetImage").removeClass("resetImageInput");
            $("#saveAccountProfile").removeClass("saveAccProfile");
            setTimeout(() => {
              $("#mainAlertBox").empty();
            }, 5000);

            $(".cr-boundary").hide();
            $(".cr-slider-wrap").hide();

          },
          error: function (error) {
            alertBox = `
         <div class="alertBox alert alert-warning d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:"><use xlink:href="#check-circle-fill"/></svg>
                <div id="resultMessage">
              ${error}
                </div>
              </div>
        `;
            mainAlertBox.append(alert);
          },
        });
      });
  });
  function convertBase64UrlToBlob(base64Url) {
    var byteString = atob(base64Url);
    var ab = new ArrayBuffer(byteString.length);
    var ia = new Uint8Array(ab);
    for (var i = 0; i < byteString.length; i++) {
      ia[i] = byteString.charCodeAt(i);
    }
    return ab;
  }



  function loadImage(picIdElement) {
    var username = "";
    $.ajax({
      type: "GET",
      url: "/session/username",
      success: function (data) {
        username = data;

        $.ajax({
          type: "GET",
          url: "/load/image?username=" + username,
          contentType: "image/jpeg",
          success: function (data) {


            $(picIdElement).replaceWith(`<img id="${picIdElement.replace("#", "")}"src="" alt="Image">`);
            $(picIdElement).attr("src", "data:image/jpeg;base64," + data);

          },
          error: function (data) {
            displaySmallAvatar("#profilePicture", data.responseJSON[0], data.responseJSON[1]);
          },
        });
      },
      error: function (error) {

      },
    });
  }

  function loadBigImage() {

    var username = "";
    $.ajax({
      type: "GET",
      url: "/session/username",
      success: function (data) {
        username = data;

        $.ajax({
          type: "GET",
          url: "/load/image?username=" + username,
          contentType: "image/jpeg",
          success: function (data) {


            $("#oldImage").attr("src", "data:image/jpeg;base64," + data);
            $("#clearImage").addClass("clearImage");
            $("#clearImage").attr("disabled", false);
          },
          error: function (data) {

            loadAvatar();
            $("#clearImage").removeClass("clearImage");
            $("#clearImage").attr("disabled", true);
          },
        });
      },
      error: function (error) {

      },
    });
  }

  function loadAvatar() {
    var username = "";
    $.ajax({
      type: "GET",
      url: "/session/username",
      success: function (data) {
        username = data;

        $.ajax({
          type: "GET",
          url: "/load/user-profile-info?username=" + username,
          contentType: "image/jpeg",
          success: function (data) {

            displayBigAvatar(data[0], data[1]);
          },
          error: function (data) {

          },
        });
      },
      error: function (error) {

      },
    });
  }
  function loadOldImage() {
    $("#oldImage").remove();
    $(".bigAvatar").remove();
    var imageDiv = `<img id="oldImage" alt="old image"></img>`;
    $("#mainImageFrame").append(imageDiv);
    loadBigImage();
    $(".resetImageInput").attr("disabled", true);
    $(".saveAccProfile").attr("disabled", true);

  }

  function displayBigAvatar(name, code) {

    var name = name;
    cCode = code;
    var size = 292;
    $(".bigAvatar").remove();
    var bigAvatar = generateBigAvatar(name, size, cCode);

    var style = $("<style>").html(bigAvatar.css);
    $("head").append(style);

    var html = $(bigAvatar.html);
    $("#oldImage").replaceWith(html);
    $(".clearImage").attr("disabled", true);
  }

  function displaySmallAvatar(id, nameData, colorCode) {
    var name = nameData;
    var size = 40;

    var avatar = generateAvatar(name, size, colorCode);

    var style = $("<style>").html(avatar.css);
    $("head").append(style);

    var html = $(avatar.html);
    $(id).replaceWith(html);
  }


  function generateAvatar(name, size, colorCode) {
    var initials = name.match(/\b\w/g) || [];
    initials = ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();
    var color = colorCode;

    var css = `
                        #profilePicture {
                          display: flex;
                          justify-content: center;
                          align-items: center;
                          width: ${size}px;
                          height: ${size}px;
                          border-radius: 50%;
                          background-color: ${color};
                          color: white;
                          font-weight: bold;
                          font-size: ${Math.floor(size / 2)}px;
                          text-transform: uppercase;
                            position: relative;
  top: 50%;
  transform: translateY(-50%);
                        }
                      `;

    var html = `
                        <div id="profilePicture">
                          ${initials}
                        </div>
                      `;

    return { css: css, html: html };
  }

  function generateBigAvatar(name, size, colorCode) {
    var initials = name.match(/\b\w/g) || [];
    initials = ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();
    var color = colorCode;

    var css = `
                        .bigAvatar {
                          display: flex;
                          justify-content: center;
                          align-items: center;
                          width: ${size}px;
                          height: ${size}px;
                          border-radius: 50%;
                          background-color: ${color};
                          color: white;
                          font-weight: bold;
                          font-size: ${Math.floor(size / 2)}px;
                          text-transform: uppercase;
                            
                        }
                      `;

    var html = `
                        <div class="bigAvatar">
                          ${initials}
                        </div>
                      `;

    return { css: css, html: html };
  }

  // Managing Notifications

  $(document).ready(function () {
    var mainNotificationCard = $(".ntcardMain");
    var mainTotalItems = 30;
    var secondaryTotalItems = 3;
    var mainPageCount = 0;
    var secondaryPageCount = 0;
    var icon = "";
    var btnColor = "";
    function fetchData() {
      // show loader animation
      var loaderReplacement = `<div class="notificationLoader" style="display: block;">
          <div class="spinner-border" role="status">
              <span class="visually-hidden">Loading...</span>
          </div>
        </div>`;
      mainNotificationCard.empty().append(loaderReplacement);

      $.ajax({
        url: "/user/notification/0/" + secondaryTotalItems,
        type: "GET",
        dataType: "json",
        beforeSend: function () {
          $(".load-more-btn").prop("disabled", true); // disable the load more button
        },
        success: function (data) {


          mainNotificationCard.empty();
          for (var i = 0; i < data.body.length; i++) {

            var notification = data.body[i];
            if (notification.message.toLowerCase().includes("ongoing")) {
              btnColor = "btn-primary";
            } else if (notification.message.toLowerCase().includes("rejected")) {
              btnColor = "btn-danger";
            } else if (notification.message.toLowerCase().includes("approved")) {
              btnColor = "btn-success";
            }


            var notificationHtml = `
                <a href="javascript:void(0)" title="${notification.title}:${notification.message}" class=" text-dark border-top notifLink ">
                  <div class="d-flex no-block align-items-center p-10">
                    <span class="btn ${btnColor} btn-circle left-icon">
                      <i class="ti-info-alt" style="font-size: 15px;"></i>
                    </span>
                    <div class="ms-2">
                      <h5  title="${notification.title}" class="mb-0 title notifTitle">${notification.title}</h5>
                      <p title="${notification.message}" style="margin-bottom:-5px;" class="mail-desc notifdescription">${notification.message}</p>
                    </div>
                  </div>
                </a>
                <hr>
               
              `;

            mainNotificationCard.append(notificationHtml);


            secondaryPageCount = notification.pageCount;

          }

          if (secondaryTotalItems < secondaryPageCount) {

            var loadMore = ` <div id="loadm" class="load-more-btn mx-auto d-block btn btn-outline-success">LOAD MORE</div>`;
            mainNotificationCard.append(loadMore);
          } else {
            $(".load-more-btn").remove();
          }

        },
        error: function (jqXHR, textStatus, errorThrown) {

          console.log("Error fetching data: " + textStatus + " - " + errorThrown);
        },
        complete: function () {
          // hide loader animation and enable load more button

          $(".load-more-btn").prop("disabled", false);
        }
      });
    }

    // fetch data on page load
    fetchData();

    // handle "load more" button click
    $(document).on("click", ".load-more-btn", function () {
      secondaryTotalItems += 2; // increment page number
      fetchData();
      $(mainNotificationCard).animate({
        scrollTop: $(mainNotificationCard).offset().top

      }, 50);
    });



    $(document).on("click", ".notifLink", function () {
      var modalView = $(".modalView");




      var icon = "";
      var btnColor = "";
      var htmlModal = `
    

      <div class="modal fade" id="notificationModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-fullscreen">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="notificationModalLabel">Notifications</h5>
        <button type="button" class="btn-close clearModal" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="container-sm mainCardContainer">
        
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary clearModal" data-bs-dismiss="modal">Close</button>
       
      </div>
    </div>
  </div>
</div>
      `;
      modalView.append(htmlModal);
      // fetch data on page load

      $("#notificationModal").modal("toggle");
      fetchNotificationData();







    });

    function fetchNotificationData() {
      var mainNotificationCard = $(".mainCardContainer");
      // show loader animation
      var loaderReplacement = `<div class="notificationLoader" style="display: block;">
          <div class="spinner-border" role="status">
              <span class="visually-hidden">Loading...</span>
          </div>
        </div>`;
      mainNotificationCard.empty().append(loaderReplacement);

      $.ajax({
        url: "/user/notification/0/" + mainTotalItems,
        type: "GET",
        dataType: "json",
        beforeSend: function () {
          $(".loadMoreBtn").prop("disabled", true); // disable the load more button
        },
        success: function (data) {


          mainNotificationCard.empty();
          for (var i = 0; i < data.body.length; i++) {

            var notification = data.body[i];
            if (notification.message.toLowerCase().includes("ongoing")) {
              btnColor = "btn-primary";
            } else if (notification.message.toLowerCase().includes("rejected")) {
              btnColor = "btn-danger";
            } else if (notification.message.toLowerCase().includes("approved")) {
              btnColor = "btn-success";
            }

            var notificationHtml = `
              <div class="accordion-item">
                <h2 class="accordion-header">
                  <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#notification-${i}" aria-expanded="false" aria-controls="notification-${i}">
                    <span class="btn ${btnColor} btn-circle left-icon">
                      <i class="ti-info-alt" style="font-size: 15px;"></i>
                    </span>
                    <div class="ms-2">
                      <h5 class="text-start">${notification.title}</h5>
                      <p style="margin-bottom:-5px;" class="mail-desc ">${notification.message}</p>
                    </div>
                  </button>
                </h2>
                <div id="notification-${i}" class="accordion-collapse collapse" aria-labelledby="notification-${i}" data-bs-parent="#notification-list">
                  <div class="accordion-body">
                   
                    <p><strong>Message:</strong> ${notification.message}</p>
                    <p><strong>Date and Time:</strong> ${notification.dateAndTime}</p>
                    <p><strong>From:</strong>System</p>
                    <p><strong>Reciever:</strong> ${notification.to}</p>
                  </div>
                </div>
              </div>
            `;

            mainNotificationCard.append(notificationHtml);


            mainPageCount = notification.pageCount;

          }


          if (mainTotalItems < mainPageCount) {

            var loadMore = ` <div id="" class="loadMoreBtn mx-auto d-block btn btn-outline-success">LOAD MORE</div>`;
            mainNotificationCard.append(loadMore);


          } else {
            $(".loadMoreBtn").remove();
          }


        },
        error: function (jqXHR, textStatus, errorThrown) {
          console.log("Error fetching data: " + textStatus + " - " + errorThrown);
        },
        complete: function () {
          // hide loader animation and enable load more button
          $(".loadMoreBtn").prop("disabled", false);
        }
      });
    }


    $(document).on("click", ".loadMoreBtn", function () {
      mainTotalItems++; // increment page number
      fetchNotificationData();
      $(mainNotificationCard).animate({
        scrollTop: $(mainNotificationCard).offset().top

      }, 50);

    });
    $(document).on('click', '.accordion-item button', function () {
      var clickedCollapse = $(this).closest('.accordion-item').find('.accordion-collapse');
      var otherCollapses = $('.accordion-item').not($(this).closest('.accordion-item')).find('.accordion-collapse');

      // Close all other accordion items except the clicked one
      otherCollapses.removeClass('show');
      $('.accordion-item button').not($(this)).addClass('collapsed');

      // Toggle the clicked item
      clickedCollapse.collapse('toggle');
      $(this).toggleClass('collapsed');
    });





  });


});
